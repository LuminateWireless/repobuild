# Auto-generated by repobuild, do not modify directly.

gen-obj/main.cc.o: a/foo.h b/foo.h bar.h c/include/c/foo.h foo.h gen-files/d/foo.h gen-src/c/.dummy main.cc
	mkdir -p gen-obj; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 main.cc -o gen-obj/main.cc.o

gen-obj/main: gen-obj/a/bar.cc.o gen-obj/a/foo.cc.o gen-obj/b/bar.cc.o gen-obj/b/foo.cc.o gen-obj/bar.cc.o gen-obj/c/include/c/foo.cc.o gen-obj/foo.cc.o gen-obj/gen-files/d/foo.cc.o gen-obj/main.cc.o
	mkdir -p gen-obj; $(CXX) $(CXXFLAGS) -std=c++11 -DUSE_CXX0X -stdlib=libc++ -lpthread -g -O3 -lm gen-obj/a/bar.cc.o gen-obj/a/foo.cc.o gen-obj/b/bar.cc.o gen-obj/b/foo.cc.o gen-obj/bar.cc.o gen-obj/c/include/c/foo.cc.o gen-obj/foo.cc.o gen-obj/gen-files/d/foo.cc.o gen-obj/main.cc.o -o gen-obj/main

main: gen-obj/main
	pwd > /dev/null
	ln -f -s /Users/chris/src/repobuild/testdata/gen-obj/main main

gen-obj/foo.cc.o: a/foo.h b/foo.h c/include/c/foo.h foo.h gen-files/d/foo.h gen-src/c/.dummy foo.cc
	mkdir -p gen-obj; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 foo.cc -o gen-obj/foo.cc.o

gen-obj/b/foo.cc.o: b/foo.h b/foo.cc
	mkdir -p gen-obj/b; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 b/foo.cc -o gen-obj/b/foo.cc.o

gen-obj/a/foo.cc.o: a/foo.h a/foo.cc
	mkdir -p gen-obj/a; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 a/foo.cc -o gen-obj/a/foo.cc.o

gen-obj/bar.cc.o: bar.h bar.cc
	mkdir -p gen-obj; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 -O3 bar.cc -o gen-obj/bar.cc.o

gen-obj/a/bar.cc.o: a/bar.cc
	mkdir -p gen-obj/a; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 a/bar.cc -o gen-obj/a/bar.cc.o

gen-src/c:
	mkdir -p gen-src; ln -s /Users/chris/src/repobuild/testdata/c/include/c gen-src/c

gen-src/c/.dummy: gen-src/c
	if [[ ! -a gen-src/c/.dummy ]]; then touch gen-src/c/.dummy; fi

gen-obj/b/bar.cc.o: b/bar.cc
	mkdir -p gen-obj/b; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 b/bar.cc -o gen-obj/b/bar.cc.o

gen-obj/gen-files/d/foo.cc.o: gen-files/d/foo.h gen-files/d/foo.cc
	mkdir -p gen-obj/gen-files/d; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 gen-files/d/foo.cc -o gen-obj/gen-files/d/foo.cc.o

gen-obj/c/include/c/foo.cc.o: c/include/c/foo.h gen-src/c/.dummy c/include/c/foo.cc
	mkdir -p gen-obj/c/include/c; $(CXX) $(CXXFLAGS) -c -I. -Igen-files -Igen-src -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 c/include/c/foo.cc -o gen-obj/c/include/c/foo.cc.o

gen-obj/d/.foo_gen.dummy: d/foo_gen.sh d/foo_tmp.cc d/foo_tmp.h
	(mkdir -p gen-files/d; cd d; GEN_DIR="../gen-files/d" eval './foo_gen.sh') && (mkdir -p gen-obj/d; touch gen-obj/d/.foo_gen.dummy)

gen-files/d/foo.cc: gen-obj/d/.foo_gen.dummy

gen-files/d/foo.h: gen-obj/d/.foo_gen.dummy

.PHONY: 

clean:
	rm -rf gen-obj
	rm -rf gen-files
	rm -f main
	rm -f gen-src/c/.dummy
	rm -f gen-src/c
	rm -rf gen-src

all: main

.PHONY: clean all

.DEFAULT_GOAL=all

