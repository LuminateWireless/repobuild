# Auto-generated by repobuild, do not modify directly.

obj/bar.cc.o: bar.h bar.cc
	mkdir -p obj; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 -O3 bar.cc -o obj/bar.cc.o

obj/foo.cc.o: a/foo.h b/foo.h c/include/c/foo.h foo.h gen/d/foo.h src/c/.dummy foo.cc
	mkdir -p obj; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 foo.cc -o obj/foo.cc.o

obj/main.cc.o: a/foo.h b/foo.h bar.h c/include/c/foo.h foo.h gen/d/foo.h src/c/.dummy main.cc
	mkdir -p obj; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 main.cc -o obj/main.cc.o

obj/main: obj/a/bar.cc.o obj/a/foo.cc.o obj/b/bar.cc.o obj/b/foo.cc.o obj/bar.cc.o obj/c/include/c/foo.cc.o obj/foo.cc.o obj/gen/d/foo.cc.o obj/main.cc.o
	mkdir -p obj; $(CXX) $(CXXFLAGS) -std=c++11 -DUSE_CXX0X -stdlib=libc++ -lpthread -g -O3 -lm obj/a/bar.cc.o obj/a/foo.cc.o obj/b/bar.cc.o obj/b/foo.cc.o obj/bar.cc.o obj/c/include/c/foo.cc.o obj/foo.cc.o obj/gen/d/foo.cc.o obj/main.cc.o -o obj/main

main: obj/main
	pwd > /dev/null
	ln -f -s /Users/chris/src/repobuild/testdata/obj/main main

obj/a/bar.cc.o: a/bar.cc
	mkdir -p obj/a; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 a/bar.cc -o obj/a/bar.cc.o

obj/a/foo.cc.o: a/foo.h a/foo.cc
	mkdir -p obj/a; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 a/foo.cc -o obj/a/foo.cc.o

obj/b/bar.cc.o: b/bar.cc
	mkdir -p obj/b; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 b/bar.cc -o obj/b/bar.cc.o

obj/b/foo.cc.o: b/foo.h b/foo.cc
	mkdir -p obj/b; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 b/foo.cc -o obj/b/foo.cc.o

src/c:
	mkdir -p src; ln -s /Users/chris/src/repobuild/testdata/c/include/c src/c

src/c/.dummy: src/c
	if [[ ! -a src/c/.dummy ]]; then touch src/c/.dummy; fi

obj/c/include/c/foo.cc.o: c/include/c/foo.h src/c/.dummy c/include/c/foo.cc
	mkdir -p obj/c/include/c; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 c/include/c/foo.cc -o obj/c/include/c/foo.cc.o

d/foo_gen: d/foo_gen.sh d/foo_tmp.cc d/foo_tmp.h
	(mkdir -p gen/d; cd d; env GEN_DIR="../gen/d" ./foo_gen.sh)

gen/d/foo.cc: d/foo_gen

gen/d/foo.h: d/foo_gen

.PHONY: d/foo_gen

obj/gen/d/foo.cc.o: gen/d/foo.h gen/d/foo.cc
	mkdir -p obj/gen/d; $(CXX) $(CXXFLAGS) -c -I. -Igen -Isrc -std=c++11 -DUSE_CXX0X -stdlib=libc++ -pthread -g -Wall -Werror -O3 gen/d/foo.cc -o obj/gen/d/foo.cc.o

clean:
	rm -rf obj
	rm -rf gen
	rm -f main
	rm -f src/c/.dummy
	rm -f src/c
	rm -rf src

all: main

.PHONY: clean all

.DEFAULT: all

