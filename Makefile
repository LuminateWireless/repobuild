# Auto-generated by repobuild, do not modify directly.

# Environment flag settings.
ROOT_DIR := $(shell pwd)
# Some compiler specific flag settings.
CXX_GCC := $(shell echo $$($(CXX) --version | egrep '(^gcc|^g\+\+)' | head -n 1 | wc -l))
CC_GCC := $(shell echo $$($(CC) --version | egrep '(^gcc|^g\+\+|^cc)' | head -n 1 | wc -l))
ifeq ($(CC_GCC),1)
	CFLAGS= -pthread -g -Wall -Werror -Wno-sign-compare -Wno-unused-local-typedefs -Wno-error=unused-local-typedefs -O3 -flto
	BASIC_CFLAGS= -pthread
else
	CFLAGS= -stdlib=libc++ -pthread -g -Wall -Werror -Wno-sign-compare -O3 -flto -Qunused-arguments -fcolor-diagnostics
	BASIC_CFLAGS= -stdlib=libc++ -pthread
endif
ifeq ($(CXX_GCC),1)
	LD_FORCE_LINK_START := -Wl,--whole-archive
	LD_FORCE_LINK_END := -Wl,--no-whole-archive
	LDFLAGS= -lpthread -g -O3 -flto -L/usr/local/lib -L/opt/local/lib
	CXXFLAGS= -pthread -g -Wall -Werror -Wno-sign-compare -Wno-unused-local-typedefs -Wno-error=unused-local-typedefs -O3 -flto -std=c++11 -DUSE_CXX0X
	BASIC_CXXFLAGS= -pthread -std=c++11
else
	LD_FORCE_LINK_START := -Wl,-force_load
	LD_FORCE_LINK_END := 
	LDFLAGS= -stdlib=libc++ -lpthread -g -O3 -flto -L/usr/local/lib -L/opt/local/lib
	CXXFLAGS= -stdlib=libc++ -pthread -g -Wall -Werror -Wno-sign-compare -O3 -flto -Qunused-arguments -fcolor-diagnostics -std=c++11 -DUSE_CXX0X
	BASIC_CXXFLAGS= -stdlib=libc++ -pthread -std=c++11
endif

define PythonSetup
import os
from setuptools import setup, find_packages

setup(
    name = os.environ['PY_NAME'],
    version = os.environ['PY_VERSION'],
    packages = find_packages(),
    scripts = os.environ['PY_SCRIPTS'].split(),
)

endef
export PythonSetup

.gen-files/base_setup.py: 
	echo "$$PythonSetup" > .gen-files/base_setup.py


.gen-src/repobuild: 
	mkdir -p .gen-src; [ -f . ] || mkdir -p .; ln -f -s .. .gen-src/repobuild


.gen-src/repobuild/.dummy: .gen-src/repobuild
	[ -f .gen-src/repobuild/.dummy ] || touch .gen-src/repobuild/.dummy

__auto_name_0: .gen-src/repobuild

.PHONY: __auto_name_0


.gen-src/.gen-files/repobuild: 
	mkdir -p .gen-src/.gen-files; [ -f .gen-files ] || mkdir -p .gen-files; ln -f -s ../../.gen-files .gen-src/.gen-files/repobuild


.gen-src/.gen-files/repobuild/.dummy: .gen-src/.gen-files/repobuild
	[ -f .gen-src/.gen-files/repobuild/.dummy ] || touch .gen-src/.gen-files/repobuild/.dummy


.gen-src/testdata: 
	mkdir -p .gen-src; [ -f testdata ] || mkdir -p testdata; ln -f -s ../testdata .gen-src/testdata


.gen-src/testdata/.dummy: .gen-src/testdata
	[ -f .gen-src/testdata/.dummy ] || touch .gen-src/testdata/.dummy

testdata/__auto_name_0: .gen-src/testdata __auto_name_0

.PHONY: testdata/__auto_name_0


.gen-src/.gen-files/testdata: 
	mkdir -p .gen-src/.gen-files; [ -f .gen-files/testdata ] || mkdir -p .gen-files/testdata; ln -f -s ../../.gen-files/testdata .gen-src/.gen-files/testdata


.gen-src/.gen-files/testdata/.dummy: .gen-src/.gen-files/testdata
	[ -f .gen-src/.gen-files/testdata/.dummy ] || touch .gen-src/.gen-files/testdata/.dummy


.gen-obj/testdata/a/ATest.class: .gen-src/.gen-files/repobuild/.dummy .gen-src/.gen-files/testdata/.dummy .gen-src/repobuild/.dummy .gen-src/testdata/.dummy testdata/a/ATest.java
	mkdir -p .gen-obj/testdata/a
	echo Compiling: testdata/a/ATest.java
	javac -d .gen-obj -s .gen-files -g -cp  .:.gen-files:.gen-src:.gen-src/.gen-files testdata/a/ATest.java

testdata/a/test_java: .gen-obj/testdata/a/ATest.class __auto_name_0 testdata/__auto_name_0

.PHONY: testdata/a/test_java


.gen-obj/testdata/MainClass.class: .gen-src/.gen-files/repobuild/.dummy .gen-src/.gen-files/testdata/.dummy .gen-src/repobuild/.dummy .gen-src/testdata/.dummy testdata/MainClass.java
	mkdir -p .gen-obj/testdata
	echo Compiling: testdata/MainClass.java
	javac -d .gen-obj -s .gen-files -g -cp  .:.gen-files:.gen-src:.gen-src/.gen-files testdata/MainClass.java


.gen-files/testdata/java_main.manifest: .gen-obj/testdata/a/ATest.class .gen-obj/testdata/MainClass.class
	eval 'rm .gen-files/testdata/java_main.manifest; for line in "Main-class: testdata.MainClass"; do echo "$$line" >> .gen-files/testdata/java_main.manifest; done; touch .gen-files/testdata/java_main.manifest'


.gen-obj/testdata/java_main.jar: .gen-files/testdata/java_main.manifest .gen-obj/testdata/a/ATest.class .gen-obj/testdata/MainClass.class
	echo Jaring: .gen-obj/testdata/java_main.jar
	cd .gen-obj ; jar cfm ../.gen-obj/testdata/java_main.jar ../.gen-files/testdata/java_main.manifest testdata/a/ATest.class testdata/MainClass.class

testdata/java_main: .gen-obj/testdata/java_main.jar testdata/a/test_java __auto_name_0 testdata/__auto_name_0

.PHONY: testdata/java_main


java_main: .gen-obj/testdata/java_main.jar
	pwd > /dev/null
	ln -f -s .gen-obj/testdata/java_main java_main


clean: 
	rm -rf .gen-src/repobuild/.dummy
	rm -rf .gen-src/.gen-src/repobuild/repobuild
	rm -rf .gen-src/.gen-files/repobuild/.dummy
	rm -rf .gen-src/.gen-files/repobuild
	rm -rf .gen-src/testdata/.dummy
	rm -rf .gen-src/.gen-src/testdata/testdata
	rm -rf .gen-src/.gen-files/testdata/.dummy
	rm -rf .gen-src/.gen-files/testdata
	rm -f java_main
	rm -f java_main.jar
	rm -rf .gen-obj
	rm -rf .gen-files
	rm -rf .gen-src


all: java_main testdata/java_main


.PHONY: clean all

.DEFAULT_GOAL=all

